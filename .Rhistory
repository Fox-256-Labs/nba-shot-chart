left_join(player_stats, by = c("namePlayer" = "name_player")) |>
mutate(
text_label = glue("<span style='font-size:14px;'>**{toupper(label)}**</span><br>
<span style='font-size:12.5px;color:grey40;'>{total} shots ·
{round(accuracy, 1)}% made</span>")
)
# Circle crop player images
images$cropped <- cropcircles::circle_crop(
images = images$image, border_size = 1, border_colour = "whitesmoke"
)
# factor players by accuracy
shots_player$namePlayer<-factor(shots_player$namePlayer, levels = player_stats$name_player)
images$namePlayer<-factor(images$namePlayer, levels = player_stats$name_player)
shot_chart_draft <-
# draws the NBA half court
BasketballAnalyzeR::drawNBAcourt(
ggplot(data = shots_player), size = 0.5, col = "grey20") +
# shot data
geom_point(aes(x = x, y = y, fill = typeEvent), shape = 21, color = "white", size = 2.5, alpha = 0.8) +
# backdrop image with fill to create border
geom_image(data=images, mapping=aes(x=-20, y=6, image=cropped), color="#818990", size=0.16, asp=1/1.2) +
# player image
geom_image(data = images, aes(x = -20, y = 6, image = cropped), size = 0.15, asp = 1 / 1.2) +
# text per player with name, team, and stats
ggtext::geom_textbox(data = images, aes(x = 5, y = 6, label = text_label),
fill = NA, box.size = NA) +
# Create your own discrete scale
scale_fill_manual(values=rev(c("grey70","#ED254E"))) +
# For position scales, a vector of range expansion constants used to add some padding around the data to ensure that they are placed some distance away from the axes
scale_y_continuous(expand=c(0.1,0.2)) +
# create small multiple chart for each player across 3 columns
facet_wrap(~ namePlayer, ncol = 3) +
# Cartesian coordinates with fixed "aspect ratio"
coord_equal() +
# Set guides for each scale
guides(fill = guide_legend(override.aes=list(size=5))) +
labs(
fill = "Type",
title = "NBA Player Shot Chart",
subtitle = "2022-23 Regular Season"
)
#save
ggsave("nba-shots-draft.png", bg="white" , height=9, width=12, units="in")
shot_chart_draft +
theme(legend.position = "top", # move the legend to the top
legend.title = element_text(face="bold", size=12), # make the title bold and increase the size
plot.margin = margin(t=20), #increases the Top margin of the plot by 20
legend.text = element_text(size=12), #inceases size of text
legend.margin = margin(rep(0,4)),# Adjusting legend margin
strip.text = element_blank(), # Remove text that appears in facets
strip.background = element_blank(),# Remove background that appears in facets
legend.key = element_blank(), # Remove default legend key
axis.text = element_blank(), # Remove default axit text
legend.justification = "left", # Move legend to the left
panel.background = element_blank(),# Remove panel background
plot.title = element_text(face="bold", size=18), # make the plot title bold and increase the size
plot.subtitle = element_text(color="#818990", size=16, margin=margin(b=5)),
panel.grid.minor=element_blank(),# Remove panel grid minor
plot.caption = element_textbox_simple(hjust=0.01, color="#818990", margin=margin(b=10), size=10),
# panel.grid.major = element_line(color="grey90", linewidth=0.3),
axis.title=element_blank(), # Remove axis titles
axis.ticks = element_blank())# Remove axis ticks
#save
ggsave("nba-shots-final.png", bg="white" , height=9, width=12, units="in")
# Data frame with player images and labels
images <- data.frame(
namePlayer = c("Joel Embiid", "Luka Dončić", "LeBron James", "Stephen Curry",
"Damian Lillard", "Shai Gilgeous-Alexander"),
label = c("Joel Embiid", "Luka Dončić", "LeBron James", "Stephen Curry",
"Damian Lillard", "Shai G-Alexander"),
image = c("https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/3059318.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/3945274.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/1966.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/3975.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/6606.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/4278073.png")
) |>
left_join(player_stats, by = c("namePlayer" = "name_player")) |>
left_join(df_dict_nba_teams|>select(nameTeam,slugTeam), by=c("name_team"="nameTeam"))|>
mutate(
text_label = glue("<span style='font-size:14px;'>**{toupper(label)}**</span><br>
<span style='font-size:12.5px;color:grey40;'>{total} shots ·
{round(accuracy, 1)}% made</span>")
)
# Data frame with player images and labels
images <- data.frame(
namePlayer = c("Joel Embiid", "Luka Dončić", "LeBron James", "Stephen Curry",
"Damian Lillard", "Shai Gilgeous-Alexander"),
label = c("Joel Embiid", "Luka Dončić", "LeBron James", "Stephen Curry",
"Damian Lillard", "Shai G-Alexander"),
image = c("https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/3059318.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/3945274.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/1966.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/3975.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/6606.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/4278073.png")
) |>
left_join(player_stats, by = c("namePlayer" = "name_player")) |>
left_join(df_dict_nba_teams|>select(nameTeam,slugTeam), by=c("name_team"="nameTeam"))|>
mutate(
text_label = glue("<span style='font-size:14px;'>**{toupper(label)}**</span><br>
<span style='font-size:12.5px;color:grey40;'>{total} shots ·
{round(accuracy, 1)}% made</span>")
)
# Circle crop player images
images$cropped <- cropcircles::circle_crop(
images = images$image, border_size = 1, border_colour = "whitesmoke"
)
# factor players by accuracy
shots_player$namePlayer<-factor(shots_player$namePlayer, levels = player_stats$name_player)
images$namePlayer<-factor(images$namePlayer, levels = player_stats$name_player)
# Creating the short chart visualization
shot_chart_draft <-
# draws the NBA half court
BasketballAnalyzeR::drawNBAcourt(
ggplot(data = shots_player), size = 0.5, col = "grey20") +
# shot data
geom_point(aes(x = x, y = y, fill = typeEvent), shape = 21, color = "white", size = 2.5, alpha = 0.8) +
# backdrop image with fill to create border
geom_image(data=images, mapping=aes(x=-20, y=6, image=cropped), color="#818990", size=0.16, asp=1/1.2) +
# player image
geom_image(data = images, aes(x = -20, y = 6, image = cropped), size = 0.15, asp = 1 / 1.2) +
# text per player with name, team, and stats
ggtext::geom_textbox(data = images, aes(x = 5, y = 6, label = text_label),
fill = NA, box.size = NA) +
# Create your own discrete scale
scale_fill_manual(values=rev(c("grey70","#ED254E"))) +
# For position scales, a vector of range expansion constants used to add some padding around the data to ensure that they are placed some distance away from the axes
scale_y_continuous(expand=c(0.1,0.2)) +
# create small multiple chart for each player across 3 columns
facet_wrap(~ namePlayer, ncol = 3) +
# Cartesian coordinates with fixed "aspect ratio"
coord_equal() +
# Set guides for each scale
guides(fill = guide_legend(override.aes=list(size=5))) +
labs(
fill = "Type",
title = "NBA Player Shot Chart",
subtitle = "2022-23 Regular Season"
)
#save
ggsave("nba-shots-draft.png", bg="white" , height=9, width=12, units="in")
# Making more adjustments to the draft visualization by making adjustments to the theme
shot_chart_draft +
theme(legend.position = "top", # move the legend to the top
legend.title = element_text(face="bold", size=12), # make the title bold and increase the size
plot.margin = margin(t=20), #increases the Top margin of the plot by 20
legend.text = element_text(size=12), #inceases size of text
legend.margin = margin(rep(0,4)),# Adjusting legend margin
strip.text = element_blank(), # Remove text that appears in facets
strip.background = element_blank(),# Remove background that appears in facets
legend.key = element_blank(), # Remove default legend key
axis.text = element_blank(), # Remove default axit text
legend.justification = "left", # Move legend to the left
panel.background = element_blank(),# Remove panel background
plot.title = element_text(face="bold", size=18), # make the plot title bold and increase the size
plot.subtitle = element_text(color="#818990", size=16, margin=margin(b=5)),
panel.grid.minor=element_blank(),# Remove panel grid minor
plot.caption = element_textbox_simple(hjust=0.01, color="#818990", margin=margin(b=10), size=10),
# panel.grid.major = element_line(color="grey90", linewidth=0.3),
axis.title=element_blank(), # Remove axis titles
axis.ticks = element_blank())# Remove axis ticks
#save
ggsave("nba-shots-final.png", bg="white" , height=9, width=12, units="in")
View(images)
# Data frame with player images and labels
images <- data.frame(
namePlayer = c("Joel Embiid", "Luka Dončić", "LeBron James", "Stephen Curry",
"Damian Lillard", "Shai Gilgeous-Alexander"),
label = c("Joel Embiid", "Luka Dončić", "LeBron James", "Stephen Curry",
"Damian Lillard", "Shai G-Alexander"),
image = c("https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/3059318.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/3945274.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/1966.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/3975.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/6606.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/4278073.png")
) |>
left_join(player_stats, by = c("namePlayer" = "name_player")) |>
left_join(df_dict_nba_teams|>select(nameTeam,slugTeam), by=c("name_team"="nameTeam"))|>
mutate(text_label = glue("<span style='font-size:14px;'>**{toupper(label)}**</span><br><span style='font-size:12.5px;color:grey40;'>{slugTeam} · {total_shots} shots · </span><span style='color:#ED254E;font-size:12.5px;'>{round(accuracy*100,0)}% made</span>")
)
# Data frame with player images and labels
images <- data.frame(
namePlayer = c("Joel Embiid", "Luka Dončić", "LeBron James", "Stephen Curry",
"Damian Lillard", "Shai Gilgeous-Alexander"),
label = c("Joel Embiid", "Luka Dončić", "LeBron James", "Stephen Curry",
"Damian Lillard", "Shai G-Alexander"),
image = c("https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/3059318.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/3945274.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/1966.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/3975.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/6606.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/4278073.png")
) |>
left_join(player_stats, by = c("namePlayer" = "name_player")) |>
left_join(df_dict_nba_teams|>select(nameTeam,slugTeam), by=c("name_team"="nameTeam"))|>
mutate(text_label = glue("<span style='font-size:14px;'>**{toupper(label)}**</span><br><span style='font-size:12.5px;color:grey40;'>{slugTeam} · {total} shots · </span><span style='color:#ED254E;font-size:12.5px;'>{round(accuracy,0)}% made</span>")
)
# Data frame with player images and labels
images <- data.frame(
namePlayer = c("Joel Embiid", "Luka Dončić", "LeBron James", "Stephen Curry",
"Damian Lillard", "Shai Gilgeous-Alexander"),
label = c("Joel Embiid", "Luka Dončić", "LeBron James", "Stephen Curry",
"Damian Lillard", "Shai G-Alexander"),
image = c("https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/3059318.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/3945274.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/1966.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/3975.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/6606.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/4278073.png")
) |>
left_join(player_stats, by = c("namePlayer" = "name_player")) |>
left_join(df_dict_nba_teams|>select(nameTeam,slugTeam), by=c("name_team"="nameTeam"))|>
mutate(text_label = glue("<span style='font-size:14px;'>**{toupper(label)}**</span><br><span style='font-size:12.5px;color:grey40;'>{slugTeam} · {total} shots · </span><span style='color:#ED254E;font-size:12.5px;'>{round(accuracy,0)}% made</span>")
)
# Circle crop player images
images$cropped <- cropcircles::circle_crop(
images = images$image, border_size = 1, border_colour = "whitesmoke"
)
# factor players by accuracy
shots_player$namePlayer<-factor(shots_player$namePlayer, levels = player_stats$name_player)
images$namePlayer<-factor(images$namePlayer, levels = player_stats$name_player)
# Creating the short chart visualization
shot_chart_draft <-
# draws the NBA half court
BasketballAnalyzeR::drawNBAcourt(
ggplot(data = shots_player), size = 0.5, col = "grey20") +
# shot data
geom_point(aes(x = x, y = y, fill = typeEvent), shape = 21, color = "white", size = 2.5, alpha = 0.8) +
# backdrop image with fill to create border
geom_image(data=images, mapping=aes(x=-20, y=6, image=cropped), color="#818990", size=0.16, asp=1/1.2) +
# player image
geom_image(data = images, aes(x = -20, y = 6, image = cropped), size = 0.15, asp = 1 / 1.2) +
# text per player with name, team, and stats
ggtext::geom_textbox(data = images, aes(x = 5, y = 6, label = text_label),
fill = NA, box.size = NA) +
# Create your own discrete scale
scale_fill_manual(values=rev(c("grey70","#ED254E"))) +
# For position scales, a vector of range expansion constants used to add some padding around the data to ensure that they are placed some distance away from the axes
scale_y_continuous(expand=c(0.1,0.2)) +
# create small multiple chart for each player across 3 columns
facet_wrap(~ namePlayer, ncol = 3) +
# Cartesian coordinates with fixed "aspect ratio"
coord_equal() +
# Set guides for each scale
guides(fill = guide_legend(override.aes=list(size=5))) +
labs(
fill = "Type",
title = "NBA Player Shot Chart",
subtitle = "2022-23 Regular Season"
)
#save
ggsave("nba-shots-draft.png", bg="white" , height=9, width=12, units="in")
# Making more adjustments to the draft visualization by making adjustments to the theme
shot_chart_draft +
theme(legend.position = "top", # move the legend to the top
legend.title = element_text(face="bold", size=12), # make the title bold and increase the size
plot.margin = margin(t=20), #increases the Top margin of the plot by 20
legend.text = element_text(size=12), #inceases size of text
legend.margin = margin(rep(0,4)),# Adjusting legend margin
strip.text = element_blank(), # Remove text that appears in facets
strip.background = element_blank(),# Remove background that appears in facets
legend.key = element_blank(), # Remove default legend key
axis.text = element_blank(), # Remove default axit text
legend.justification = "left", # Move legend to the left
panel.background = element_blank(),# Remove panel background
plot.title = element_text(face="bold", size=18), # make the plot title bold and increase the size
plot.subtitle = element_text(color="#818990", size=16, margin=margin(b=5)),
panel.grid.minor=element_blank(),# Remove panel grid minor
plot.caption = element_textbox_simple(hjust=0.01, color="#818990", margin=margin(b=10), size=10),
# panel.grid.major = element_line(color="grey90", linewidth=0.3),
axis.title=element_blank(), # Remove axis titles
axis.ticks = element_blank())# Remove axis ticks
#save
ggsave("nba-shots-final.png", bg="white" , height=9, width=12, units="in")
library(tidyverse)
library(BasketballAnalyzeR)
library(nbastatR)
library(ggimage)
library(cropcircles)
library(ggtext)
library(glue)
library(janitor)
library(htmltools)
library(sysfonts)
library(plotly)
# Set a grey color for consistency in the visualization
grey <- '#818990'
# Use the Chivo font (you must install this locally)
font <- sysfonts::font_add("Chivo", "./fonts/Chivo/static/Chivo-Regular.ttf")
Sys.setenv(VROOM_CONNECTION_SIZE = 500072)
# Get shot data for specific teams in the 2022-23 season
shots <- teams_shots(
team_ids = c('1610612744', '1610612747', '1610612755', '1610612742', '1610612760', '1610612757'),
seasons = 2023
)
# save to csv
write.csv(shots,"./shots.csv", row.names = FALSE)
# save to csv
write.csv(shots,"./data/shots.csv", row.names = FALSE)
#read shots csv
player_shots <- read.csv("./data/shots.csv")
head(player_shots)
# Filter for specific players and scale the x and y coordinates
shots_player <- player_shots |>
filter(namePlayer %in% c("LeBron James", "Stephen Curry")) |>
# Scale x and y coordinates (court dimensions adjusted manually)
mutate(x = (locationX / 10) - 0,
y = (locationY / 10) - 41.75) |>
# Remove shots from beyond half-court range
filter(y < 0)
View(shots_player)
shots_player |>
group_by(namePlayer, nameTeam, typeEvent) |>
summarise(total_shots = n(), .groups = 'drop')
shots_player |>
group_by(namePlayer, nameTeam, typeEvent) |>
summarise(total_shots = n(), .groups = 'drop') |>
pivot_wider(names_from = typeEvent, values_from = total_shots, values_fill = 0)
shots_player |>
group_by(namePlayer, nameTeam, typeEvent) |>
summarise(total_shots = n(), .groups = 'drop') |>
pivot_wider(names_from = typeEvent, values_from = total_shots, values_fill = 0) |>
janitor::clean_names() |>
mutate(total = made_shot + missed_shot,
accuracy = round(100 * made_shot / total, 1))
shots_player |>
group_by(namePlayer, nameTeam, typeEvent) |>
summarise(total_shots = n(), .groups = 'drop') |>
pivot_wider(names_from = typeEvent, values_from = total_shots, values_fill = 0) |>
janitor::clean_names() |>
mutate(total = made_shot + missed_shot,
accuracy = round(100 * made_shot / total, 1)) %>%
ungroup()|>
arrange(-accuracy)
# Group data by player and event type, then calculate stats
player_stats <- shots_player |>
group_by(namePlayer, nameTeam, typeEvent) |>
summarise(total_shots = n(), .groups = 'drop') |>
pivot_wider(names_from = typeEvent, values_from = total_shots, values_fill = 0) |>
janitor::clean_names() |>
mutate(total = made_shot + missed_shot,
accuracy = round(100 * made_shot / total, 1)) %>%
ungroup()|>
arrange(-accuracy)
# Data frame with player images and labels
images <- data.frame(
namePlayer = c( "LeBron James", "Stephen Curry"),
label = c("LeBron James", "Stephen Curry"),
image = c("https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/1966.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/3975.png")
) |>
left_join(player_stats, by = c("namePlayer" = "name_player")) |>
left_join(df_dict_nba_teams|>
select(nameTeam,slugTeam), by=c("name_team"="nameTeam"))|>
mutate(text_label = glue("<span style='font-size:14px;'>**{toupper(label)}**</span><br><span style='font-size:12.5px;color:grey40;'>{slugTeam} · {total} shots · </span><span style='color:#ED254E;font-size:12.5px;'>{round(accuracy,0)}% made</span>")
)
View(images)
shots_player |>
group_by(namePlayer, nameTeam, typeEvent) |>
summarise(total_shots = n(), .groups = 'drop') |>
pivot_wider(names_from = typeEvent, values_from = total_shots, values_fill = 0) |>
janitor::clean_names()
View(player_stats)
cropcircles::circle_crop(
images = images$image, border_size = 1, border_colour = "whitesmoke"
)
# Circle crop player images
images$cropped <- cropcircles::circle_crop(
images = images$image, border_size = 1, border_colour = "whitesmoke"
)
# factor players by accuracy
shots_player$namePlayer<-factor(shots_player$namePlayer, levels = player_stats$name_player)
images$namePlayer<-factor(images$namePlayer, levels = player_stats$name_player)
shot_chart_draft <-
# draws the NBA half court
BasketballAnalyzeR::drawNBAcourt(
ggplot(data = shots_player), size = 0.5, col = "grey20") +
# shot data
geom_point(aes(x = x, y = y, fill = typeEvent), shape = 21, color = "white", size = 2.5, alpha = 0.8) +
# backdrop image with fill to create border
geom_image(data=images, mapping=aes(x=-20, y=6, image=cropped), color="#818990", size=0.16, asp=1/1.2) +
# player image
geom_image(data = images, aes(x = -20, y = 6, image = cropped), size = 0.15, asp = 1 / 1.2) +
# text per player with name, team, and stats
ggtext::geom_textbox(data = images, aes(x = 5, y = 6, label = text_label),
fill = NA, box.size = NA) +
# Create your own discrete scale
scale_fill_manual(values=rev(c("grey70","#ED254E"))) +
# For position scales, a vector of range expansion constants used to add some padding around the data to ensure that they are placed some distance away from the axes
scale_y_continuous(expand=c(0.1,0.2)) +
# create small multiple chart for each player across 3 columns
facet_wrap(~ namePlayer, ncol = 3) +
# Cartesian coordinates with fixed "aspect ratio"
coord_equal() +
# Set guides for each scale
guides(fill = guide_legend(override.aes=list(size=5))) +
labs(
fill = "Type",
title = "NBA Player Shot Chart",
subtitle = "2022-23 Regular Season"
)
shot_chart_draft
#save
ggsave("nba-shots-draft.png", bg="white" , height=9, width=12, units="in")
BasketballAnalyzeR::drawNBAcourt(
ggplot(data = shots_player), size = 0.5, col = "grey20") +
# shot data
geom_point(aes(x = x, y = y, fill = typeEvent), shape = 21, color = "white", size = 2.5, alpha = 0.8)
BasketballAnalyzeR::drawNBAcourt(
ggplot(data = shots_player), size = 0.5, col = "grey20") +
# shot data
geom_point(aes(x = x, y = y, fill = typeEvent), shape = 21, color = "white", size = 2.5, alpha = 0.8) +
# backdrop image with fill to create border
geom_image(data=images, mapping=aes(x=-20, y=6, image=cropped), color="#818990", size=0.16, asp=1/1.2) +
# player image
geom_image(data = images, aes(x = -20, y = 6, image = cropped), size = 0.15, asp = 1 / 1.2)
BasketballAnalyzeR::drawNBAcourt(
ggplot(data = shots_player), size = 0.5, col = "grey20") +
# shot data
geom_point(aes(x = x, y = y, fill = typeEvent), shape = 21, color = "white", size = 2.5, alpha = 0.8) +
# backdrop image with fill to create border
geom_image(data=images, mapping=aes(x=-20, y=6, image=cropped), color="#818990", size=0.16, asp=1/1.2) +
# player image
geom_image(data = images, aes(x = -20, y = 6, image = cropped), size = 0.15, asp = 1 / 1.2) +
# text per player with name, team, and stats
ggtext::geom_textbox(data = images, aes(x = 5, y = 6, label = text_label),
fill = NA, box.size = NA)
library(tidyverse)
library(BasketballAnalyzeR)
library(nbastatR)
library(ggimage)
library(cropcircles)
library(ggtext)
library(glue)
library(janitor)
library(htmltools)
library(sysfonts)
library(plotly)
# Set a grey color for consistency in the visualization
grey <- '#818990'
# Use the Chivo font (you must install this locally)
font <- sysfonts::font_add("Chivo", "./fonts/Chivo/static/Chivo-Regular.ttf")
#read shots csv
player_shots <- read.csv("./data/shots.csv")
head(player_shots)
# Filter for specific players and scale the x and y coordinates
shots_player <- player_shots |>
filter(namePlayer %in% c("LeBron James", "Stephen Curry")) |>
# Scale x and y coordinates (court dimensions adjusted manually)
mutate(x = (locationX / 10) - 0,
y = (locationY / 10) - 41.75) |>
# Remove shots from beyond half-court range
filter(y < 0)
# Group data by player and event type, then calculate stats
player_stats <- shots_player |>
group_by(namePlayer, nameTeam, typeEvent) |>
summarise(total_shots = n(), .groups = 'drop') |>
pivot_wider(names_from = typeEvent, values_from = total_shots, values_fill = 0) |>
janitor::clean_names() |>
mutate(total = made_shot + missed_shot,
accuracy = round(100 * made_shot / total, 1)) %>%
ungroup()|>
arrange(-accuracy)
# Data frame with player images and labels
images <- data.frame(
namePlayer = c( "LeBron James", "Stephen Curry"),
label = c("LeBron James", "Stephen Curry"),
image = c("https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/1966.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/3975.png")
) |>
left_join(player_stats, by = c("namePlayer" = "name_player")) |>
left_join(df_dict_nba_teams|>
select(nameTeam,slugTeam), by=c("name_team"="nameTeam"))|>
mutate(text_label = glue("<span style='font-size:14px;'>**{toupper(label)}**</span><br><span style='font-size:12.5px;color:grey40;'>{slugTeam} · {total} shots · </span><span style='color:#ED254E;font-size:12.5px;'>{round(accuracy,0)}% made</span>")
)
Sys.setenv(VROOM_CONNECTION_SIZE = 500072)
# Get shot data for specific teams in the 2022-23 season
shots <- teams_shots(
team_ids = c('1610612744', '1610612747', '1610612755', '1610612742', '1610612760', '1610612757'),
seasons = 2023
)
# save to csv
#write.csv(shots,"./data/shots.csv", row.names = FALSE)
write.csv(df_dict_nba_teams,"./data/df_dict_nba_teams.csv", row.names = FALSE)
df_dict_nba_teams <- read.csv("./data/df_dict_nba_teams.csv")
# Data frame with player images and labels
images <- data.frame(
namePlayer = c( "LeBron James", "Stephen Curry"),
label = c("LeBron James", "Stephen Curry"),
image = c("https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/1966.png",
"https://a.espncdn.com/combiner/i?img=/i/headshots/nba/players/full/3975.png")
) |>
left_join(player_stats, by = c("namePlayer" = "name_player")) |>
left_join(df_dict_nba_teams|>
select(nameTeam,slugTeam), by=c("name_team"="nameTeam"))|>
mutate(text_label = glue("<span style='font-size:14px;'>**{toupper(label)}**</span><br><span style='font-size:12.5px;color:grey40;'>{slugTeam} · {total} shots · </span><span style='color:#ED254E;font-size:12.5px;'>{round(accuracy,0)}% made</span>")
)
View(images)
# Circle crop player images
images$cropped <- cropcircles::circle_crop(
images = images$image, border_size = 1, border_colour = "whitesmoke"
)
# Circle crop player images
images$cropped <- cropcircles::circle_crop(
images = images$image, border_size = 1, border_colour = "whitesmoke"
)
# factor players by accuracy
shots_player$namePlayer<-factor(shots_player$namePlayer, levels = player_stats$name_player)
images$namePlayer<-factor(images$namePlayer, levels = player_stats$name_player)
View(df_dict_nba_teams)
